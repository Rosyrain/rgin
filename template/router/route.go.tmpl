package router

import (
	"net/http"
	"{{ .Name }}/controller"
	//_ "{{ .Name }}/docs" // 千万不要忘了导入把你上一步生成的docs
	"{{ .Name }}/logger"
	"{{ .Name }}/middlewares"

	"github.com/gin-gonic/gin"

	"github.com/gin-contrib/pprof"
)

func SetupRouter(mode string) *gin.Engine {
	if mode == gin.ReleaseMode {
		gin.SetMode(gin.ReleaseMode)
	}
	r := gin.New()
	//r.Use(logger.GinLogger(), logger.GinRecovery(true), middlewares.RateLimitMiddleware(2*time.Second, 1))
	r.Use(logger.GinLogger(), logger.GinRecovery(true))

	//r.LoadHTMLFiles("templates/index.html")
	//r.Static("/static", "./static")
	//r.GET("/", func(c *gin.Context) {
	//	c.HTML(http.StatusOK, "index.html", nil)
	//})

	//注册业务路由
	v1 := r.Group("/api/v1")
	{

		//注册
		v1.POST("/signup", controller.SignUpHandler)

		//登录
		v1.POST("/login", controller.LoginHandler)

		//获取用户信息 param
		v1.GET("/user/:username", controller.UserInfoHandler)

	}

	v1.Use(middlewares.JWTAuthMiddleware()) //应用JWT认证中间件
	{
		/*
			// 浏览记录
			v1.GET("/history",controller.UserHistoryHandler)
		*/
	}

	pprof.Register(r) //注册pprof相关路由

	r.NoRoute(func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"msg": "404",
		})
	})

	return r
}
